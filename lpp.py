import nmap
import tkinter as tk
from tkinter import scrolledtext, messagebox
import threading
import re

ip_regex = r"^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])$"

def callback_result(host, scan_result, app):
    """Fonction de rappel pour mettre à jour l'interface utilisateur avec les résultats du scan en temps réel."""
    app.output_text.insert(tk.END, f'Host: {host} Scan results: {scan_result}\n')

class PenTestApp(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title('Penetration Testing Tool Suite')
        self.geometry('800x600')
        self.create_widgets()

    def create_widgets(self):
        tk.Label(self, text="Enter IP Address:").pack(pady=5)
        self.host_entry = tk.Entry(self, width=40)
        self.host_entry.pack(pady=5)
        self.run_nmap_button = tk.Button(self, text="IP Full Analysis", command=self.start_nmap_scan_thread)
        self.run_nmap_button.pack(pady=5)
        self.output_text = scrolledtext.ScrolledText(self, width=70, height=20)
        self.output_text.pack(pady=10)

    def run_nmap_scan(self):
        host = self.host_entry.get()
        if not re.match(ip_regex, host):
            messagebox.showerror("Error", "Invalid IP address format.")
            return
        self.output_text.delete('1.0', tk.END)
        self.output_text.insert(tk.END, f"Scanning host: {host}\n")
        scanner = nmap.PortScannerAsync()
        scanner.scan(host, '1-1000', '-v -sS -sV -sC -A -O', callback=lambda host, scan_result: callback_result(host, scan_result, self))

    def start_nmap_scan_thread(self):
        thread = threading.Thread(target=self.run_nmap_scan)
        thread.daemon = True
        thread.start()

if __name__ == "__main__":
    app = PenTestApp()
    app.mainloop()
